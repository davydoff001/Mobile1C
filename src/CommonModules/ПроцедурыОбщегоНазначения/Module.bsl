
Функция обПолучитьСписокДопРеквизитов(СправочникИмя) Экспорт 
	
	Запрос		 = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	""ДопРеквизит_"" + ДопРеквизитыДопРеквизиты.Реквизит КАК Реквизит,
	               |	ПРЕДСТАВЛЕНИЕ(ДопРеквизитыДопРеквизиты.ТипДанных) КАК ТипДанных,
	               |	ДопРеквизитыДопРеквизиты.НомерСтроки КАК НомерСтроки
	               |ИЗ
	               |	Справочник.НазначениеДопРеквизитов.ДопРеквизиты КАК ДопРеквизитыДопРеквизиты
	               |ГДЕ
	               |	ДопРеквизитыДопРеквизиты.Ссылка.СправочникНазначение = &СправочникИмя
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки";
	Запрос.УстановитьПараметр("СправочникИмя", СправочникИмя);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Процедура ОбновитьДанные(Адрес) Экспорт 
	УдалитьДанные(Адрес,Ложь);
	ЗагрузитьДанныеНаСервере(Адрес);
КонецПроцедуры

Процедура ЗагрузитьДанныеНаСервере(Адрес)
	Макет = Справочники.СправочникУкравто.ПолучитьМакет("Данные");
	Для НомерСтроки=3 По Макет.ВысотаТаблицы Цикл
		ФИО			 = Макет.Область(НомерСтроки, 7).Текст;
		Категория    = Макет.Область(НомерСтроки, 1).Текст;
		Организация  = Макет.Область(НомерСтроки, 2).Текст;
		Департамент  = Макет.Область(НомерСтроки, 4).Текст;
		Должность	 = Макет.Область(НомерСтроки, 6).Текст;
		Почта		 = Макет.Область(НомерСтроки, 8).Текст;
		ТелефонМоб	 = Макет.Область(НомерСтроки, 9).Текст;
		ТелефонСтац	 = Макет.Область(НомерСтроки, 10).Текст;
		ТелефонФакс	 = Макет.Область(НомерСтроки, 11).Текст;
		ВнТелефон	 = Макет.Область(НомерСтроки, 12).Текст;
		
		Если Организация=Должность или Департамент=Должность Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(ФИО) Тогда
			Продолжить;
		КонецЕсли;
				
		СоздатьОбъект(ФИО,Категория,Организация,Департамент,Должность,Почта,ТелефонМоб,ТелефонСтац,ТелефонФакс,ВнТелефон);	
		
		ПоместитьВоВременноеХранилище(Новый Структура("ТекстЗаголовка,Инд,КоличествоОбходов,ЗакрытьИндикатор","Загрузка",НомерСтроки,Макет.ВысотаТаблицы,Истина), Адрес);
		
	КонецЦикла;	
КонецПроцедуры

Процедура СоздатьОбъект(ФИО,Категория,Организация,Департамент,Должность,Почта,ТелефонМоб,ТелефонСтац,ТелефонФакс,ВнТелефон)
	
	НовыйОбъект = Справочники.СправочникУкравто.СоздатьЭлемент();
	НовыйОбъект.Наименование = ОбработатьФИО(ФИО);
	НовыйОбъект.Категория = СокрЛП(Категория);
	НовыйОбъект.Организация = СокрЛП(Организация);
	НовыйОбъект.Департамент = СокрЛП(Департамент);
	НовыйОбъект.Должность = Должность;
	НовыйОбъект.Почта = Почта;
	НовыйОбъект.Телефон = ТелефонМоб;
	НовыйОбъект.Телефон1 = ТелефонСтац;
	НовыйОбъект.Телефон2 = ТелефонФакс;
	НовыйОбъект.Телефон3 = ВнТелефон;
	
	Попытка
		НовыйОбъект.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
			
КонецПроцедуры

Функция ОбработатьФИО(ФИО)	
	ФИО = СтрЗаменить(ФИО,"  "," ");
	ФИО = СокрЛП(ФИО);
	
	Возврат ФИО;
КонецФункции

Процедура УдалитьДанные(Адрес,ЗакрытьИндикатор=Истина) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
   |	СправочникУкравто.Ссылка КАК Ссылка
   |ИЗ
   |	Справочник.СправочникУкравто КАК СправочникУкравто";
	Выборка = Запрос.Выполнить().Выбрать();
	
	сч = 0;
	Пока Выборка.Следующий() Цикл
		сч = сч + 1;
		СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СпрОбъект.Удалить();
		ПоместитьВоВременноеХранилище(Новый Структура("ТекстЗаголовка,Инд,КоличествоОбходов,ЗакрытьИндикатор","Удаление",сч,Выборка.Количество(),ЗакрытьИндикатор), Адрес);
	КонецЦикла;
	
КонецПроцедуры

Функция ЭтоIOS() Экспорт 
	ЭтоIOS = Истина;
	Если ПараметрыСеанса.ТекущаяОС <> Перечисления.МобильныеОС.iOS Тогда
		ЭтоIOS = Ложь;
	КонецЕсли;
	
	Возврат ЭтоIOS;
КонецФункции

Процедура ОбновитьОффЛайнРасписание(тзРасписание,Направление) Экспорт 
	
	НЗ = РегистрыСведений.ОффЛайнРасписание.СоздатьНаборЗаписей();
	НЗ.Отбор.Направление.Установить(Направление);
	НЗ.Прочитать();
	НЗ.Очистить();
	
	МассивНаправлений = Новый Массив;
	Для Сч = 0 По тзРасписание.Количество()-1 Цикл
		МассивНаправлений.Добавить(Направление);	
	КонецЦикла;
	
	НЗ.Загрузить(тзРасписание);
	НЗ.ЗагрузитьКолонку(МассивНаправлений,"Направление");
	НЗ.Записать();
	
КонецПроцедуры
 
Функция ПолучитьОффЛайнРасписание(Направление, ПоказыватьНеОтправленые=Ложь) Экспорт 
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ОффЛайнРасписание.Номер КАК Номер,
		|	ОффЛайнРасписание.Дни КАК Дни,
		|	ОффЛайнРасписание.Маршрут КАК Маршрут,
		|	ОффЛайнРасписание.Отправление КАК Отправление,
		|	ОффЛайнРасписание.Прибытие КАК Прибытие,
		|	ОффЛайнРасписание.ВПути КАК ВПути,
		|	ОффЛайнРасписание.ДеньНедели КАК ДеньНедели,
		|	ОффЛайнРасписание.Направление КАК Направление
		|ИЗ
		|	РегистрСведений.ОффЛайнРасписание КАК ОффЛайнРасписание
		|ГДЕ
		|	ОффЛайнРасписание.Направление = &Направление
		|	И 1 = 1
		|
		|УПОРЯДОЧИТЬ ПО
		|	Отправление";
	
	Запрос = Новый Запрос;
	Если ПоказыватьНеОтправленые Тогда
		ТекущаяДата = ТекущаяДата()-300;
		ТекущаяДата = Формат(ТекущаяДата,"ДФ=""ЧЧ:мм""");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"1 = 1","ОффЛайнРасписание.Отправление > &Отправление");
		Запрос.УстановитьПараметр("Отправление", ТекущаяДата);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Направление", Направление);
	
	тзРасписание = Запрос.Выполнить().Выгрузить();
	
	Возврат тзРасписание;
КонецФункции
 
